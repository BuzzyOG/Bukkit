package io.github.itachi1706.NickNamer;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener{
	
	static File nickFile;
    static FileConfiguration nick;
    
	@Override
	public void onEnable(){
		//Logic when plugin gets enabled
		getLogger().info("Enabling Plugin...");
		nickFile = new File(getDataFolder(), "nick.yml");
		//Nick File Config
				try {
					firstRun();
				} catch (Exception e){
					e.printStackTrace();
				}
				nick = new YamlConfiguration();
			    loadYamls();
		//Plugin Manager
		getServer().getPluginManager().registerEvents(this, this);
		getServer().getPluginManager().registerEvents(new Nick(), this);
		if (getServer().getPluginManager().getPlugin("TagAPI") == null) {
            getLogger().warning("\n" +
                            "+--------------------------------------------------------------+\n" +
                            "|                         TagAPI                               |\n" +
                            "|    TagAPI is what makes some features of Join Message work   |\n" +
                            "|      DOWNLOAD - http://dev.bukkit.org/bukkit-plugins/tag/    |\n" +
                            "+--------------------------------------------------------------+");
        }
		getCommand("nick").setExecutor(new NickCmd(this));
		ArrayList<Player> playerList = Bukkit.getServer().getOnlinePlayers();
		for (int i=0; i < playerList.size(); i++){
			Nick.refreshNameTag(playerList[i]);
			
		}
	}
	
	@Override
	public void onDisable(){
		//Logic when plugin gets disabled
		getLogger().info("Disabling Plugin...");
		saveYamls();
	}
	
	private void firstRun() throws Exception{
		if (!nickFile.exists()){
			nickFile.getParentFile().mkdirs();
	        copy(getResource("ban.yml"), nickFile);
		}
	}
	
	private void copy(InputStream in, File file){
		try{
			OutputStream out = new FileOutputStream(file);
			byte[] buf = new byte[1024];
			int len;
			while ((len=in.read(buf))>0){
				out.write(buf,0,len);
			}
			out.close();
			in.close();
		} catch (Exception e){
			e.printStackTrace();
		}
	}
	
	public static void saveYamls() {
	    try {
	        nick.save(nickFile);
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	}
	public static void loadYamls() {
	    try {
	    	nick.load(nickFile);
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	}
	
	@EventHandler(priority=EventPriority.HIGH)
	public void onJoin(PlayerJoinEvent e){
		Player player = e.getPlayer();
		if (nick.getString(player.getName()) == null){
			getLogger().info("Adding new nick record to new player");
			nick.set(player.getName() , player.getName());
			saveYamls();
		}
		player.setDisplayName(nick.getString(player.getName()));
		if (player.isOp()){
			e.setJoinMessage(ChatColor.DARK_RED + "[OP] " + player.getDisplayName() + ChatColor.YELLOW + " joined the game");
		}
		e.setJoinMessage(ChatColor.YELLOW + player.getDisplayName() + " joined the game");
		}

}
